create database if not exists symbiosis;grant all on symbiosis.* to 'symbiosis_admin'@'localhost' identified by 'symADM1NP@$$';create table if not exists UserGroup(  UserGroupID INT(3) AUTO_INCREMENT PRIMARY KEY,  Description VARCHAR(20));create table if not exists Role(  RoleID VARCHAR(20) AUTO_INCREMENT PRIMARY KEY,  Description VARCHAR(50),  Enabled TINYINT(1) NOT NULL DEFAULT 1);create table if not exists UserGroupRole(  UserGroupID INT(3) AUTO_INCREMENT NOT NULL REFERENCES UserGroup(UserGroupID) ON UPDATE CASCADE,  RoleID VARCHAR(20) NOT NULL REFERENCES Role(RoleID) ON UPDATE CASCADE,  UserGroupRoleDescription VARCHAR(20) NOT NULL,  PRIMARY KEY (UserGroupID,RoleID));create table if not exists Channel(  ChannelID INT(3) AUTO_INCREMENT PRIMARY KEY,  Description VARCHAR(50) NOT NULL);create table if not exists UserStatus(  UserStatusID INT(3) AUTO_INCREMENT PRIMARY KEY,  Description VARCHAR(50) NOT NULL);create table if not exists AuthUser(	SymbiosisUserID BIGINT(19) AUTO_INCREMENT PRIMARY KEY,	UserGroupID VARCHAR(20) NOT NULL REFERENCES UserGroup(UserGroupID) ON UPDATE CASCADE,	Username VARCHAR(20) NOT NULL,	Password VARCHAR(256) NOT NULL,  Salt VARCHAR(50) NOT NULL,  ChannelID VARCHAR(256) NOT NULL REFERENCES Channel(ChannelID) ON UPDATE CASCADE,  DeviceID VARCHAR(50) NOT NULL COMMENT 'IMEI',  AccessSystemID VARCHAR(50) NOT NULL COMMENT 'IMSI/BrowserId/SessionID',	AuthToken VARCHAR(256) NOT NULL,	UserStatus TINYINT(4) NOT NULL REFERENCES UserStatus(UserStatusID) ON UPDATE CASCADE,	LastLoginDate DATETIME);create table if not exists Country(  CountryID INT(3) AUTO_INCREMENT PRIMARY KEY,  CountryName VARCHAR(50) NOT NULL);create table if not exists UserAttribute(  SymbiosisUserID BIGINT(19) AUTO_INCREMENT PRIMARY KEY REFERENCES AuthUser(SymbiosisUserID) ON UPDATE CASCADE,	FirstName VARCHAR(50),  LastName VARCHAR(50),  Email VARCHAR(50),  Msisdn VARCHAR(15),  CountryID INT(3) REFERENCES Country(CountryID) ON UPDATE CASCADE);create table if not exists EventLog(  EventLogID BIGINT(19) AUTO_INCREMENT PRIMARY KEY,  EventDate DATETIME NOT NULL,  SymbiosisUserID BIGINT(19) NOT NULL REFERENCES AuthUser(SymbiosisUserID) ON UPDATE CASCADE,  Description VARCHAR(256) NOT NULL);insert into UserAttribute SELECT SymbiosisUserID FROM AuthUser;insert into UserGroup values (null, 'STR_USER');insert into UserGroup values (null, 'STR_ADMIN');insert into UserGroup values (null, 'SUPER_ADMIN');insert into UserGroupRole values (null, 'STR_USER','ROLE_USER');insert into UserGroupRole values (null, 'STR_ADMIN','ROLE_USER');insert into UserGroupRole values (null, 'SUPER_ADMIN','ROLE_USER');insert into UserGroupRole values (null, 'STR_ADMIN','STR_ADMIN');insert into UserGroupRole values (null, 'SUPER_ADMIN','STR_ADMIN');insert into UserGroupRole values (null, 'SUPER_ADMIN','SYNC_ADMIN');