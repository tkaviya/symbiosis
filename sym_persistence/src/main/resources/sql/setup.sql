create database if not exists symbiosis;grant all on symbiosis.* to 'symbiosis_admin'@'localhost' identified by 'symADM1NP@$$';create table if not exists UserGroup(  UserGroupID INT(5) AUTO_INCREMENT PRIMARY KEY,  Description VARCHAR(20));create table if not exists Role(  RoleID INT(5) AUTO_INCREMENT PRIMARY KEY,  Description VARCHAR(50),  Enabled TINYINT(1) NOT NULL DEFAULT 1);create table if not exists UserGroupRole(  UserGroupID INT(5) AUTO_INCREMENT NOT NULL REFERENCES UserGroup(UserGroupID) ON UPDATE CASCADE,  RoleID VARCHAR(20) NOT NULL REFERENCES Role(RoleID) ON UPDATE CASCADE,  UserGroupRoleDescription VARCHAR(20) NOT NULL,  PRIMARY KEY (UserGroupID,RoleID));create table if not exists Channel(  ChannelID INT(5) AUTO_INCREMENT PRIMARY KEY,  Description VARCHAR(50) NOT NULL);create table if not exists UserStatus(  UserStatusID INT(5) AUTO_INCREMENT PRIMARY KEY,  Description VARCHAR(50) NOT NULL);create table if not exists SymbiosisUser(	SymbiosisUserID BIGINT(19) AUTO_INCREMENT PRIMARY KEY,  Username VARCHAR(20) NOT NULL,  Password VARCHAR(256) NOT NULL,  Salt VARCHAR(50) NOT NULL,	UserGroupID VARCHAR(20) NOT NULL REFERENCES UserGroup(UserGroupID) ON UPDATE CASCADE,  ChannelID VARCHAR(256) NOT NULL REFERENCES Channel(ChannelID) ON UPDATE CASCADE,  DeviceID VARCHAR(50) COMMENT 'IMEI',  AccessSystemID VARCHAR(50) COMMENT 'IMSI/BrowserId/SessionID',	AuthToken VARCHAR(256),	UserStatusID TINYINT(5) NOT NULL REFERENCES UserStatus(UserStatusID) ON UPDATE CASCADE,  RegistrationDate DATETIME,  LastAuthDate DATETIME,  LastLoginDate DATETIME);create table if not exists Country(  CountryID INT(5) AUTO_INCREMENT PRIMARY KEY,  CountryName VARCHAR(50) NOT NULL);drop table if exists UserAttribute;create table if not exists UserAttribute(  SymbiosisUserID BIGINT(19) AUTO_INCREMENT PRIMARY KEY REFERENCES SymbiosisUser(SymbiosisUserID) ON UPDATE CASCADE,	FirstName VARCHAR(50),  LastName VARCHAR(50),  Email VARCHAR(50),  Msisdn VARCHAR(15),  CountryID INT(3) REFERENCES Country(CountryID) ON UPDATE CASCADE);create table if not exists EventLog(  EventLogID BIGINT(19) AUTO_INCREMENT PRIMARY KEY,  EventDate DATETIME NOT NULL,  SymbiosisUserID BIGINT(19) NOT NULL REFERENCES SymbiosisUser(SymbiosisUserID) ON UPDATE CASCADE,  Description VARCHAR(256) NOT NULL);insert into SymbiosisUser (SymbiosisUserID,Username,Password,Salt,UserGroupID,ChannelID,DeviceID,                           AccessSystemID,AuthToken,UserStatusID,RegistrationDate,LastAuthDate,LastLoginDate) values (1,'tkaviya',  '5b722b307fce6c944905d132691d5e4a2214b7fe92b738920eb3fce3a90420a19511c3010a0e7712b054daef5b57bad59ecbd93b3280f210578f547f4aed4d25',  '',1,2,NULL,NULL,'cc43438a5719dbc1f5efafe0dd76057b',1,NULL,NULL,NULL);insert into UserStatus values (0, 'INACTIVE');insert into UserStatus values (1, 'ACTIVE');insert into UserStatus values (2, 'PENDING');insert into UserStatus values (3, 'SUSPENDED');insert into UserStatus values (4, 'BLOCKED');insert into UserStatus values (10, 'UNKNOWN');insert into UserAttribute SELECT SymbiosisUserID FROM SymbiosisUser;insert into UserGroup values (null, 'STR_USER');insert into UserGroup values (null, 'STR_ADMIN');insert into UserGroup values (null, 'SUPER_ADMIN');insert into UserGroupRole values (null, 'STR_USER','ROLE_USER');insert into UserGroupRole values (null, 'STR_ADMIN','ROLE_USER');insert into UserGroupRole values (null, 'SUPER_ADMIN','ROLE_USER');insert into UserGroupRole values (null, 'STR_ADMIN','STR_ADMIN');insert into UserGroupRole values (null, 'SUPER_ADMIN','STR_ADMIN');insert into UserGroupRole values (null, 'SUPER_ADMIN','SYNC_ADMIN');